<!-- templates/index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Secure Vault | File Encryption/Decryption</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;700&family=Montserrat:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
        --primary: #00d9ff;
        --primary-dark: #0099cc;
        --secondary: #ff2d75;
        --dark: #12141d;
        --darker: #0a0c14;
        --light: #e0e5ee;
        --gray: #2a2e3d;
        --success: #28a745;
        --danger: #dc3545;
    }
    
    body {
        font-family: 'Montserrat', sans-serif;
        background: linear-gradient(135deg, var(--darker), var(--dark));
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
        color: var(--light);
    }
    
    .container {
        background: rgba(18, 20, 29, 0.8);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        padding: 2.5rem;
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(0, 217, 255, 0.1);
        border: 1px solid rgba(0, 217, 255, 0.1);
        width: 100%;
        max-width: 600px;
        animation: fadeIn 0.5s ease-out;
    }
    
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    h1 {
        font-weight: 700;
        color: var(--primary);
        text-align: center;
        margin-bottom: 2rem;
        font-size: 2.2rem;
        letter-spacing: 1px;
    }
    
    .form-label {
        font-weight: 600;
        color: var(--light);
        margin-bottom: 0.5rem;
        font-size: 0.95rem;
    }
    
    .file-input-container {
        position: relative;
        overflow: hidden;
        border-radius: 8px;
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
    }
    
    .file-input-btn {
        width: 100%;
        padding: 1rem 1.5rem;
        background: rgba(42, 46, 61, 0.5);
        border: 2px dashed var(--gray);
        border-radius: 8px;
        color: var(--light);
        display: flex;
        align-items: center;
        justify-content: space-between;
        transition: all 0.3s ease;
    }
    
    .file-input-btn:hover {
        border-color: var(--primary);
        background: rgba(0, 217, 255, 0.05);
    }
    
    .file-input-label {
        display: flex;
        align-items: center;
        gap: 10px;
    }
    
    .file-input-icon {
        font-size: 1.2rem;
        color: var(--primary);
    }
    
    .file-input {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
    }
    
    .key-input-container {
        position: relative;
        margin-bottom: 1.5rem;
    }
    
    .key-input {
        width: 100%;
        padding: 1rem 1.5rem;
        background: rgba(42, 46, 61, 0.5);
        border: 1px solid var(--gray);
        border-radius: 8px;
        color: var(--light);
        font-family: 'JetBrains Mono', monospace;
        transition: all 0.3s ease;
    }
    
    .key-input:focus {
        border-color: var(--primary);
        box-shadow: 0 0 0 0.25rem rgba(0, 217, 255, 0.25);
        outline: none;
    }
    
    .action-buttons {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
    }
    
    .btn-action {
        flex: 1;
        padding: 1rem;
        border-radius: 8px;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }
    
    .btn-encrypt {
        background: var(--primary);
        color: var(--darker);
        border: none;
    }
    
    .btn-encrypt:hover {
        background: var(--primary-dark);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 217, 255, 0.3);
    }
    
    .btn-decrypt {
        background: var(--secondary);
        color: white;
        border: none;
    }
    
    .btn-decrypt:hover {
        background: #e00050;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(255, 45, 117, 0.3);
    }
    
    #result {
        background: rgba(42, 46, 61, 0.5);
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        border-left: 4px solid var(--primary);
        transition: all 0.3s ease;
        text-align: center;
    }
    
    .success-message {
        color: var(--primary);
        font-weight: 600;
        font-size: 1.1rem;
    }
    
    .result-placeholder {
        text-align: center;
        padding: 2rem 0;
        color: var(--gray);
    }
    
    .result-placeholder i {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        color: var(--gray);
    }
    
    .download-btn {
        width: 100%;
        padding: 1rem;
        background: var(--success);
        color: white;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }
    
    .download-btn:hover {
        background: #218838;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
    }
    
    .security-info {
        margin-top: 2rem;
        padding: 1rem;
        background: rgba(255, 45, 117, 0.1);
        border-radius: 8px;
        border-left: 4px solid var(--secondary);
        font-size: 0.85rem;
        color: var(--light);
    }
    
    .security-info i {
        color: var(--secondary);
        margin-right: 8px;
    }
    
    @media (max-width: 768px) {
        .container {
            padding: 1.5rem;
        }
        
        h1 {
            font-size: 1.8rem;
        }
        
        .action-buttons {
            flex-direction: column;
        }
    }
    
    /* Loading animation */
    .loader {
        display: none;
        width: 24px;
        height: 24px;
        border: 3px solid rgba(255,255,255,0.3);
        border-radius: 50%;
        border-top-color: var(--primary);
        animation: spin 1s ease-in-out infinite;
    }
    
    @keyframes spin {
        to { transform: rotate(360deg); }
    }
</style>
</head>
<body>
  <div class="container">
    <h1><i class="fas fa-lock"></i> Secure Vault</h1>

    {% with messages = get_flashed_messages(with_categories=true) %}
      {% if messages %}
        {% for category, message in messages %}
          <div class="alert alert-{{ 'danger' if category == 'error' else category }} alert-dismissible fade show" role="alert">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        {% endfor %}
      {% endif %}
    {% endwith %}

    <form id="cryptoForm" method="POST" action="/process" enctype="multipart/form-data">
      <div class="mb-4">
        <label for="fileInput" class="form-label">Select File</label>
        <div class="file-input-container">
          <button type="button" class="file-input-btn">
            <span class="file-input-label">
              <i class="fas fa-file-upload file-input-icon"></i>
              <span id="fileLabel">Choose file or drag & drop</span>
            </span>
            <i class="fas fa-search"></i>
          </button>
          <input type="file" name="file" id="fileInput" class="file-input" required>
        </div>
      </div>

      <div class="mb-4 key-input-container">
        <label for="keyInput" class="form-label">Encryption Key (1-25)</label>
        <input type="number" name="key" id="keyInput" class="form-control key-input" min="1" max="25" value="3" required>
      </div>

      <div class="action-buttons">
        <button type="submit" name="mode" value="encrypt" class="btn-action btn-encrypt">
          <span class="btn-text">Encrypt</span>
          <i class="fas fa-lock"></i>
          <div class="loader"></div>
        </button>
        <button type="submit" name="mode" value="decrypt" class="btn-action btn-decrypt">
          <span class="btn-text">Decrypt</span>
          <i class="fas fa-unlock"></i>
          <div class="loader"></div>
        </button>
      </div>
    </form>

    <div id="result">
      {% if download_link %}
        <div class="success-message text-center mb-3">
          <i class="fas fa-check-circle me-2"></i>
          Your file has been successfully processed!
        </div>
        <div class="text-center">
          <a id="downloadLink" href="{{ download_link }}" class="download-btn" download>
            <i class="fas fa-download"></i>
            Download Processed File
          </a>
        </div>
      {% else %}
        <div class="result-placeholder">
          <i class="fas fa-file-alt"></i>
          <p>Processed file status will appear here</p>
        </div>
      {% endif %}
    </div>

    <div class="security-info">
      <i class="fas fa-shield-alt"></i>
      <span>All processing happens securely. Files are processed and returned immediately.</span>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>

  <script>
    const fileInput = document.getElementById('fileInput');
    const fileLabel = document.getElementById('fileLabel');
    const fileContainer = document.querySelector('.file-input-container');
    const form = document.getElementById('cryptoForm');
    const buttons = document.querySelectorAll('.btn-action');

    fileInput.addEventListener('change', function(e) {
      const fileName = e.target.files[0] ? e.target.files[0].name : 'Choose file or drag & drop';
      fileLabel.textContent = fileName;
    });

    fileContainer.addEventListener('dragover', (e) => {
      e.preventDefault();
      fileContainer.querySelector('.file-input-btn').style.borderColor = 'var(--primary)';
      fileContainer.querySelector('.file-input-btn').style.backgroundColor = 'rgba(0, 217, 255, 0.1)';
    });

    fileContainer.addEventListener('dragleave', () => {
      fileContainer.querySelector('.file-input-btn').style.borderColor = 'var(--gray)';
      fileContainer.querySelector('.file-input-btn').style.backgroundColor = 'rgba(42, 46, 61, 0.5)';
    });

    fileContainer.addEventListener('drop', (e) => {
      e.preventDefault();
      const btn = fileContainer.querySelector('.file-input-btn');
      btn.style.borderColor = 'var(--gray)';
      btn.style.backgroundColor = 'rgba(42, 46, 61, 0.5)';

      if (e.dataTransfer.files.length) {
        const dt = new DataTransfer();
        dt.items.add(e.dataTransfer.files[0]);
        fileInput.files = dt.files;

        const event = new Event('change', { bubbles: true });
        fileInput.dispatchEvent(event);
      }
    });

    form.addEventListener('submit', function () {
      buttons.forEach(button => {
        button.querySelector('.btn-text').style.display = 'none';
        button.querySelector('i').style.display = 'none';
        button.querySelector('.loader').style.display = 'block';
        button.disabled = true;
      });
    });
  </script>

<script>
    window.addEventListener('DOMContentLoaded', () => {
    const downloadLink = document.getElementById('downloadLink');
    if (downloadLink) {
        setTimeout(() => {
        window.location.href = '/';
        }, 5000);
    }
    });
</script>
</body>
</html>
